/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package components;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class bankAccountForm extends javax.swing.JFrame {
    User user = null;
    /**
     * Creates new form bankAccountForm
     */
    DefaultTableModel transferModel;
    DefaultTableModel drawModel;
            
    public bankAccountForm() {
        initComponents();
    }
    
    public bankAccountForm(User user) {
        initComponents();
        this.user = user;
        
        transferModel = (DefaultTableModel)tbltransfer.getModel();
        drawModel = (DefaultTableModel)tblDraw.getModel();
        
        showData();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTransfer = new javax.swing.JPanel();
        lbtransferTouser = new javax.swing.JLabel();
        txtTransferTousername = new javax.swing.JTextField();
        btntransfer = new javax.swing.JButton();
        txtTransferMoney = new javax.swing.JTextField();
        lbtransferMoney = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltransfer = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDraw = new javax.swing.JTable();
        pnlWithdraw = new javax.swing.JPanel();
        btnWithDraw = new javax.swing.JButton();
        txtWithDraw = new javax.swing.JTextField();
        lbWithdrawMoney = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Account Action Form");

        pnlTransfer.setBorder(javax.swing.BorderFactory.createTitledBorder("Transfer"));

        lbtransferTouser.setText("To username :");
        lbtransferTouser.setToolTipText("");

        btntransfer.setText("Transfer");
        btntransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntransferActionPerformed(evt);
            }
        });

        lbtransferMoney.setText("Money: ");
        lbtransferMoney.setToolTipText("");

        javax.swing.GroupLayout pnlTransferLayout = new javax.swing.GroupLayout(pnlTransfer);
        pnlTransfer.setLayout(pnlTransferLayout);
        pnlTransferLayout.setHorizontalGroup(
            pnlTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTransferLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pnlTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlTransferLayout.createSequentialGroup()
                        .addComponent(lbtransferTouser, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTransferTousername, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlTransferLayout.createSequentialGroup()
                        .addComponent(lbtransferMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTransferMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btntransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        pnlTransferLayout.setVerticalGroup(
            pnlTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTransferLayout.createSequentialGroup()
                .addGroup(pnlTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTransferLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbtransferTouser)
                            .addComponent(txtTransferTousername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlTransferLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbtransferMoney)
                            .addComponent(txtTransferMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlTransferLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btntransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        tbltransfer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "To username", "Money", "Transfer date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbltransfer);
        if (tbltransfer.getColumnModel().getColumnCount() > 0) {
            tbltransfer.getColumnModel().getColumn(1).setHeaderValue("To username");
        }

        tblDraw.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Money", "WithDraw date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblDraw);

        pnlWithdraw.setBorder(javax.swing.BorderFactory.createTitledBorder("Draw Money"));

        btnWithDraw.setText("confirm");
        btnWithDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithDrawActionPerformed(evt);
            }
        });

        lbWithdrawMoney.setText("Money: ");
        lbWithdrawMoney.setToolTipText("");

        javax.swing.GroupLayout pnlWithdrawLayout = new javax.swing.GroupLayout(pnlWithdraw);
        pnlWithdraw.setLayout(pnlWithdrawLayout);
        pnlWithdrawLayout.setHorizontalGroup(
            pnlWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWithdrawLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lbWithdrawMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtWithDraw, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnWithDraw)
                .addGap(20, 20, 20))
        );
        pnlWithdrawLayout.setVerticalGroup(
            pnlWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWithdrawLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlWithdrawLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbWithdrawMoney)
                        .addComponent(txtWithDraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnWithDraw))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlTransfer, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlWithdraw, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(pnlWithdraw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btntransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntransferActionPerformed
        // TODO add your handling code here:
        String toUserName = txtTransferTousername.getText();
        float money = Float.parseFloat(txtTransferMoney.getText());

        String message = transfer(user.getUsername(), toUserName, money, "Message");

        JOptionPane.showConfirmDialog(rootPane, message);

    }//GEN-LAST:event_btntransferActionPerformed

    private void btnWithDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithDrawActionPerformed
        // TODO add your handling code here:
        float money = Float.parseFloat(txtWithDraw.getText());
        String message = draw(user.getUsername(),money);

        JOptionPane.showConfirmDialog(rootPane, message);

    }//GEN-LAST:event_btnWithDrawActionPerformed

    
   private void showData() {
        transferModel.setRowCount(0);
        for (Transferhistory transferHistory : user.getTransferhistory()) {
            transferModel.addRow(new Object[] {transferModel.getRowCount() + 1,
                transferHistory.getToUsername(), 
                transferHistory.getTotalTransfer(), 
                transferHistory.getTransferDate().toString()});
        }
        drawModel.setRowCount(0);
        for (Drawmoneyhistory drawMoneyHistory : user.getDrawMoneyHistory()) {
            drawModel.addRow(new Object[] {drawModel.getRowCount() + 1,
                                           drawMoneyHistory.getTotalDraw(),
                                           drawMoneyHistory.getDrawDate().toString()});
        }
}
   
   
   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(bankAccountForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(bankAccountForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(bankAccountForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(bankAccountForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new bankAccountForm().setVisible(true);
            }
        });
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnWithDraw;
    private javax.swing.JButton btntransfer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbWithdrawMoney;
    private javax.swing.JLabel lbtransferMoney;
    private javax.swing.JLabel lbtransferTouser;
    private javax.swing.JPanel pnlTransfer;
    private javax.swing.JPanel pnlWithdraw;
    private javax.swing.JTable tblDraw;
    private javax.swing.JTable tbltransfer;
    private javax.swing.JTextField txtTransferMoney;
    private javax.swing.JTextField txtTransferTousername;
    private javax.swing.JTextField txtWithDraw;
    // End of variables declaration//GEN-END:variables

    private static String draw(java.lang.String arg0, float arg1) {
        components.MyBankWS_Service service = new components.MyBankWS_Service();
        components.MyBankWS port = service.getMyBankWSPort();
        return port.draw(arg0, arg1);
    }

    private static String transfer(java.lang.String arg0, java.lang.String arg1, float arg2, java.lang.String arg3) {
        components.MyBankWS_Service service = new components.MyBankWS_Service();
        components.MyBankWS port = service.getMyBankWSPort();
        return port.transfer(arg0, arg1, arg2, arg3);
    }
}
